drop table comments;
drop table bookings;
DROP TABLE ITEMS;
drop table REQUESTS;
DROP TABLE USERS;
DROP TABLE BOOKING_STATUSES;
CREATE TABLE IF NOT EXISTS USERS
(
    --ID INTEGER PRIMARY KEY auto_increment,
    ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS REQUESTS(
                                       ID INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
                                       DESCRIPTION VARCHAR(50) NOT NULL,
                                       REQUESTER_ID INTEGER NOT NULL REFERENCES USERS(ID),
                                       CREATED TIMESTAMP DEFAULT NOW()
);

create table IF NOT EXISTS ITEMS
(
    --ID INTEGER PRIMARY KEY auto_increment,
    ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(50) NOT NULL,
    IS_AVIALABLE BOOLEAN NOT NULL,
    OWNER_ID INTEGER REFERENCES USERS(ID),
    REQUEST_ID INTEGER REFERENCES REQUESTS(ID)
);

CREATE TABLE  IF NOT EXISTS BOOKING_STATUSES (
    NAME VARCHAR(20) PRIMARY KEY,
    DESCRIPTION VARCHAR(50) NOT NULL
);


CREATE TABLE IF NOT EXISTS BOOKINGS (
    --ID INTEGER PRIMARY KEY auto_increment,
    ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP NOT NULL,
    ITEM_ID INTEGER NOT NULL REFERENCES ITEMS(ID),
    BOOKER_ID INTEGER NOT NULL REFERENCES USERS(ID),
    STATUS VARCHAR(50) NOT NULL REFERENCES BOOKING_STATUSES(NAME)
);

CREATE TABLE IF NOT EXISTS COMMENTS(
    --ID INTEGER PRIMARY KEY auto_increment,
    ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    TEXT VARCHAR(50) NOT NULL,
    ITEM_ID INTEGER NOT NULL REFERENCES ITEMS(ID),
    AUTHOR_ID INTEGER NOT NULL REFERENCES USERS(ID),
    CREATED TIMESTAMP DEFAULT NOW()
);