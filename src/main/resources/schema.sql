CREATE TABLE IF NOT EXISTS USERS
(
    ID INTEGER PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL
    );

CREATE UNIQUE INDEX UI_USERS_EMAIL ON USERS(EMAIL);


create table IF NOT EXISTS ITEMS
(
    ID INTEGER PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(50) NOT NULL,
    IS_AVIALABLE BOOLEAN NOT NULL,
    OWNER_ID INTEGER REFERENCES USERS(ID),
    REQUEST_ID INTEGER
);

CREATE TABLE  IF NOT EXISTS BOOKING_STATUSES (
    NAME VARCHAR(20) PRIMARY KEY,
    DESCRIPTION VARCHAR(50) NOT NULL
);

CREATE SEQUENCE IF NOT EXISTS BOOKING_SEQ
AS INTEGER
INCREMENT BY 1
MINVALUE 1;

CREATE TABLE IF NOT EXISTS BOOKINGS (
    ID INTEGER PRIMARY KEY auto_increment,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP NOT NULL,
    ITEM_ID INTEGER NOT NULL REFERENCES ITEMS(ID),
    BOOKER_ID INTEGER NOT NULL REFERENCES USERS(ID),
    STATUS VARCHAR(50) NOT NULL REFERENCES BOOKING_STATUSES(NAME)
);

CREATE SEQUENCE IF NOT EXISTS COMMENT_SEQ
AS INTEGER
INCREMENT BY 1
MINVALUE 1;

CREATE TABLE IF NOT EXISTS COMMENTS(
    ID INTEGER PRIMARY KEY auto_increment,
    TEXT VARCHAR(50) NOT NULL,
    ITEM_ID INTEGER NOT NULL REFERENCES ITEMS(ID),
    AUTHOR_ID INTEGER NOT NULL REFERENCES USERS(ID),
    CREATED TIMESTAMP DEFAULT NOW());

ALTER SEQUENCE BOOKING_SEQ RESTART WITH 1;
ALTER SEQUENCE COMMENT_SEQ RESTART WITH 1;